{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"How to Query Datomic I. Introduction Welcome to \"How to Query Datomic,\" your comprehensive guide to mastering Datomic's powerful query capabilities. Whether you're new to Datomic or looking to deepen your understanding, this book will provide you with the knowledge and skills you need to query Datomic effectively. Before we dive in, I highly recommend familiarizing yourself with the Datomic Documentation . The official documentation is an invaluable resource that covers the full spectrum of Datomic's features and functionality. Throughout this book, I'll refer to specific sections of the documentation to provide you with additional context and detailed explanations.","title":"Home"},{"location":"#how-to-query-datomic","text":"","title":"How to Query Datomic"},{"location":"#i-introduction","text":"Welcome to \"How to Query Datomic,\" your comprehensive guide to mastering Datomic's powerful query capabilities. Whether you're new to Datomic or looking to deepen your understanding, this book will provide you with the knowledge and skills you need to query Datomic effectively. Before we dive in, I highly recommend familiarizing yourself with the Datomic Documentation . The official documentation is an invaluable resource that covers the full spectrum of Datomic's features and functionality. Throughout this book, I'll refer to specific sections of the documentation to provide you with additional context and detailed explanations.","title":"I. Introduction"},{"location":"new_page1/","text":"Introduction","title":"Introduction"},{"location":"new_page1/#introduction","text":"","title":"Introduction"},{"location":"new_page2/","text":"The Data Model We Will Use If you're new to Datomic modeling I highly recommend you to read the docs regarding the Datomic Schema . We will build a Movie Catalog, very similar to IMDB, that way we can explore the different ways to leverage Datomic and it's queries capabilities. For those who doesn't know, IMDB is a popular website were you can find information about movies, series, directors, actors, and actresses and actually get the connection between those people. Here is the outline of our Movie and Series Catalog data model: Movies Title Release Year Genre Director (reference to a Person entity) Cast (references to multiple Person entities) Ratings (list of ratings for the movie) Series Title Release Year Genre Director (reference to a Person entity) Cast (references to multiple Person entities) Episodes (references to multiple Episode entities) Episodes Title Season Episode Number Air Date Ratings (list of ratings for the episode) Persons Name Birthdate Roles (Actor, Director, etc.) Genres Name Ratings Rating Value Reviewer (reference to a Person entity) Date Example Schema Definitions ;; Define schema for movies {:db/ident :movie/title :db/valueType :db.type/string :db/cardinality :db.cardinality/one :db/doc \"The title of the movie\"} {:db/ident :movie/release-year :db/valueType :db.type/long :db/cardinality :db.cardinality/one :db/doc \"The release year of the movie\"} {:db/ident :movie/genre :db/valueType :db.type/ref :db/cardinality :db.cardinality/many :db/doc \"The genre of the movie\"} {:db/ident :movie/director :db/valueType :db.type/ref :db/cardinality :db.cardinality/one :db/doc \"The director of the movie\"} {:db/ident :movie/cast :db/valueType :db.type/ref :db/cardinality :db.cardinality/many :db/doc \"The cast of the movie\"} {:db/ident :movie/ratings :db/valueType :db.type/ref :db/cardinality :db.cardinality/many :db/doc \"Ratings for the movie\"} ;; Define schema for series {:db/ident :series/title :db/valueType :db.type/string :db/cardinality :db.cardinality/one :db/doc \"The title of the series\"} {:db/ident :series/release-year :db/valueType :db.type/long :db/cardinality :db.cardinality/one :db/doc \"The release year of the series\"} {:db/ident :series/genre :db/valueType :db.type/ref :db/cardinality :db.cardinality/many :db/doc \"The genre of the series\"} {:db/ident :series/director :db/valueType :db.type/ref :db/cardinality :db.cardinality/one :db/doc \"The director of the series\"} {:db/ident :series/cast :db/valueType :db.type/ref :db/cardinality :db.cardinality/many :db/doc \"The cast of the series\"} {:db/ident :series/episodes :db/valueType :db.type/ref :db/cardinality :db.cardinality/many :db/doc \"Episodes of the series\"} ;; Define schema for episodes {:db/ident :episode/title :db/valueType :db.type/string :db/cardinality :db.cardinality/one :db/doc \"The title of the episode\"} {:db/ident :episode/season :db/valueType :db.type/long :db/cardinality :db.cardinality/one :db/doc \"The season number of the episode\"} {:db/ident :episode/episode-number :db/valueType :db.type/long :db/cardinality :db.cardinality/one :db/doc \"The episode number\"} {:db/ident :episode/air-date :db/valueType :db.type/instant :db/cardinality :db.cardinality/one :db/doc \"The air date of the episode\"} {:db/ident :episode/ratings :db/valueType :db.type/ref :db/cardinality :db.cardinality/many :db/doc \"Ratings for the episode\"} ;; Define schema for persons {:db/ident :person/name :db/valueType :db.type/string :db/cardinality :db.cardinality/one :db/doc \"The name of the person\"} {:db/ident :person/birthdate :db/valueType :db.type/instant :db/cardinality :db.cardinality/one :db/doc \"The birthdate of the person\"} {:db/ident :person/roles :db/valueType :db.type/string :db/cardinality :db.cardinality/many :db/doc \"The roles of the person (e.g., Actor, Director)\"} ;; Define schema for genres {:db/ident :genre/name :db/valueType :db.type/string :db/cardinality :db.cardinality/one :db/doc \"The name of the genre\"} ;; Define schema for ratings {:db/ident :rating/value :db/valueType :db.type/long :db/cardinality :db.cardinality/one :db/doc \"The rating value\"} {:db/ident :rating/reviewer :db/valueType :db.type/ref :db/cardinality :db.cardinality/one :db/doc \"The reviewer of the rating\"} {:db/ident :rating/date :db/valueType :db.type/instant :db/cardinality :db.cardinality/one :db/doc \"The date of the rating\"}","title":"The Data Model We Will Use"},{"location":"new_page2/#the-data-model-we-will-use","text":"If you're new to Datomic modeling I highly recommend you to read the docs regarding the Datomic Schema . We will build a Movie Catalog, very similar to IMDB, that way we can explore the different ways to leverage Datomic and it's queries capabilities. For those who doesn't know, IMDB is a popular website were you can find information about movies, series, directors, actors, and actresses and actually get the connection between those people. Here is the outline of our Movie and Series Catalog data model: Movies Title Release Year Genre Director (reference to a Person entity) Cast (references to multiple Person entities) Ratings (list of ratings for the movie) Series Title Release Year Genre Director (reference to a Person entity) Cast (references to multiple Person entities) Episodes (references to multiple Episode entities) Episodes Title Season Episode Number Air Date Ratings (list of ratings for the episode) Persons Name Birthdate Roles (Actor, Director, etc.) Genres Name Ratings Rating Value Reviewer (reference to a Person entity) Date","title":"The Data Model We Will Use"},{"location":"new_page2/#example-schema-definitions","text":";; Define schema for movies {:db/ident :movie/title :db/valueType :db.type/string :db/cardinality :db.cardinality/one :db/doc \"The title of the movie\"} {:db/ident :movie/release-year :db/valueType :db.type/long :db/cardinality :db.cardinality/one :db/doc \"The release year of the movie\"} {:db/ident :movie/genre :db/valueType :db.type/ref :db/cardinality :db.cardinality/many :db/doc \"The genre of the movie\"} {:db/ident :movie/director :db/valueType :db.type/ref :db/cardinality :db.cardinality/one :db/doc \"The director of the movie\"} {:db/ident :movie/cast :db/valueType :db.type/ref :db/cardinality :db.cardinality/many :db/doc \"The cast of the movie\"} {:db/ident :movie/ratings :db/valueType :db.type/ref :db/cardinality :db.cardinality/many :db/doc \"Ratings for the movie\"} ;; Define schema for series {:db/ident :series/title :db/valueType :db.type/string :db/cardinality :db.cardinality/one :db/doc \"The title of the series\"} {:db/ident :series/release-year :db/valueType :db.type/long :db/cardinality :db.cardinality/one :db/doc \"The release year of the series\"} {:db/ident :series/genre :db/valueType :db.type/ref :db/cardinality :db.cardinality/many :db/doc \"The genre of the series\"} {:db/ident :series/director :db/valueType :db.type/ref :db/cardinality :db.cardinality/one :db/doc \"The director of the series\"} {:db/ident :series/cast :db/valueType :db.type/ref :db/cardinality :db.cardinality/many :db/doc \"The cast of the series\"} {:db/ident :series/episodes :db/valueType :db.type/ref :db/cardinality :db.cardinality/many :db/doc \"Episodes of the series\"} ;; Define schema for episodes {:db/ident :episode/title :db/valueType :db.type/string :db/cardinality :db.cardinality/one :db/doc \"The title of the episode\"} {:db/ident :episode/season :db/valueType :db.type/long :db/cardinality :db.cardinality/one :db/doc \"The season number of the episode\"} {:db/ident :episode/episode-number :db/valueType :db.type/long :db/cardinality :db.cardinality/one :db/doc \"The episode number\"} {:db/ident :episode/air-date :db/valueType :db.type/instant :db/cardinality :db.cardinality/one :db/doc \"The air date of the episode\"} {:db/ident :episode/ratings :db/valueType :db.type/ref :db/cardinality :db.cardinality/many :db/doc \"Ratings for the episode\"} ;; Define schema for persons {:db/ident :person/name :db/valueType :db.type/string :db/cardinality :db.cardinality/one :db/doc \"The name of the person\"} {:db/ident :person/birthdate :db/valueType :db.type/instant :db/cardinality :db.cardinality/one :db/doc \"The birthdate of the person\"} {:db/ident :person/roles :db/valueType :db.type/string :db/cardinality :db.cardinality/many :db/doc \"The roles of the person (e.g., Actor, Director)\"} ;; Define schema for genres {:db/ident :genre/name :db/valueType :db.type/string :db/cardinality :db.cardinality/one :db/doc \"The name of the genre\"} ;; Define schema for ratings {:db/ident :rating/value :db/valueType :db.type/long :db/cardinality :db.cardinality/one :db/doc \"The rating value\"} {:db/ident :rating/reviewer :db/valueType :db.type/ref :db/cardinality :db.cardinality/one :db/doc \"The reviewer of the rating\"} {:db/ident :rating/date :db/valueType :db.type/instant :db/cardinality :db.cardinality/one :db/doc \"The date of the rating\"}","title":"Example Schema Definitions"}]}